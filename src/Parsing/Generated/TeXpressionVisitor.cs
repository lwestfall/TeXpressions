//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from src/antlr/TeXpression.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="TeXpressionParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public interface ITeXpressionVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.inline"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInline([NotNull] TeXpressionParser.InlineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.topExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTopExpr([NotNull] TeXpressionParser.TopExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] TeXpressionParser.ExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryLogicExpr</c>
	/// labeled alternative in <see cref="TeXpressionParser.logicExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryLogicExpr([NotNull] TeXpressionParser.UnaryLogicExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GroupLogicExpr</c>
	/// labeled alternative in <see cref="TeXpressionParser.logicExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroupLogicExpr([NotNull] TeXpressionParser.GroupLogicExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BinaryParamExpr</c>
	/// labeled alternative in <see cref="TeXpressionParser.logicExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryParamExpr([NotNull] TeXpressionParser.BinaryParamExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BinaryConstExpr</c>
	/// labeled alternative in <see cref="TeXpressionParser.logicExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryConstExpr([NotNull] TeXpressionParser.BinaryConstExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BinaryLogicExpr</c>
	/// labeled alternative in <see cref="TeXpressionParser.logicExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryLogicExpr([NotNull] TeXpressionParser.BinaryLogicExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.unaryLogicOpPre"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryLogicOpPre([NotNull] TeXpressionParser.UnaryLogicOpPreContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.negLogicalOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegLogicalOp([NotNull] TeXpressionParser.NegLogicalOpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GroupNumExpr</c>
	/// labeled alternative in <see cref="TeXpressionParser.numericExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroupNumExpr([NotNull] TeXpressionParser.GroupNumExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParamNumExpr</c>
	/// labeled alternative in <see cref="TeXpressionParser.numericExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamNumExpr([NotNull] TeXpressionParser.ParamNumExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryNumExpr</c>
	/// labeled alternative in <see cref="TeXpressionParser.numericExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryNumExpr([NotNull] TeXpressionParser.UnaryNumExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ConstantExpr</c>
	/// labeled alternative in <see cref="TeXpressionParser.numericExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantExpr([NotNull] TeXpressionParser.ConstantExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BinaryNumExpr</c>
	/// labeled alternative in <see cref="TeXpressionParser.numericExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryNumExpr([NotNull] TeXpressionParser.BinaryNumExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.unaryNumCmdName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryNumCmdName([NotNull] TeXpressionParser.UnaryNumCmdNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.unaryNumOpPre"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryNumOpPre([NotNull] TeXpressionParser.UnaryNumOpPreContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.negNumOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegNumOp([NotNull] TeXpressionParser.NegNumOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.binaryCmdName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryCmdName([NotNull] TeXpressionParser.BinaryCmdNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.divCmd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDivCmd([NotNull] TeXpressionParser.DivCmdContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.binaryNumericOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryNumericOp([NotNull] TeXpressionParser.BinaryNumericOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.varMod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarMod([NotNull] TeXpressionParser.VarModContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVar([NotNull] TeXpressionParser.VarContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDesc([NotNull] TeXpressionParser.DescContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubscript([NotNull] TeXpressionParser.SubscriptContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TeXpressionParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitId([NotNull] TeXpressionParser.IdContext context);
}

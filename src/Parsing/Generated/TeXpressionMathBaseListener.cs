//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from src/antlr/TeXpressionMath.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ITeXpressionMathListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class TeXpressionMathBaseListener : ITeXpressionMathListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.inlineMath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInlineMath([NotNull] TeXpressionMathParser.InlineMathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.inlineMath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInlineMath([NotNull] TeXpressionMathParser.InlineMathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParamExpr</c>
	/// labeled alternative in <see cref="TeXpressionMathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamExpr([NotNull] TeXpressionMathParser.ParamExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParamExpr</c>
	/// labeled alternative in <see cref="TeXpressionMathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamExpr([NotNull] TeXpressionMathParser.ParamExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BinaryExpr</c>
	/// labeled alternative in <see cref="TeXpressionMathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryExpr([NotNull] TeXpressionMathParser.BinaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BinaryExpr</c>
	/// labeled alternative in <see cref="TeXpressionMathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryExpr([NotNull] TeXpressionMathParser.BinaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ConstantExpr</c>
	/// labeled alternative in <see cref="TeXpressionMathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantExpr([NotNull] TeXpressionMathParser.ConstantExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstantExpr</c>
	/// labeled alternative in <see cref="TeXpressionMathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantExpr([NotNull] TeXpressionMathParser.ConstantExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.binaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryOp([NotNull] TeXpressionMathParser.BinaryOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.binaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryOp([NotNull] TeXpressionMathParser.BinaryOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddOp([NotNull] TeXpressionMathParser.AddOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddOp([NotNull] TeXpressionMathParser.AddOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.subOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubOp([NotNull] TeXpressionMathParser.SubOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.subOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubOp([NotNull] TeXpressionMathParser.SubOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.mulOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulOp([NotNull] TeXpressionMathParser.MulOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.mulOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulOp([NotNull] TeXpressionMathParser.MulOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.divOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivOp([NotNull] TeXpressionMathParser.DivOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.divOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivOp([NotNull] TeXpressionMathParser.DivOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.expOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpOp([NotNull] TeXpressionMathParser.ExpOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.expOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpOp([NotNull] TeXpressionMathParser.ExpOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.binaryCmdName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryCmdName([NotNull] TeXpressionMathParser.BinaryCmdNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.binaryCmdName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryCmdName([NotNull] TeXpressionMathParser.BinaryCmdNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.divCmd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivCmd([NotNull] TeXpressionMathParser.DivCmdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.divCmd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivCmd([NotNull] TeXpressionMathParser.DivCmdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign([NotNull] TeXpressionMathParser.AssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign([NotNull] TeXpressionMathParser.AssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.varMod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarMod([NotNull] TeXpressionMathParser.VarModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.varMod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarMod([NotNull] TeXpressionMathParser.VarModContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVar([NotNull] TeXpressionMathParser.VarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVar([NotNull] TeXpressionMathParser.VarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.desc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDesc([NotNull] TeXpressionMathParser.DescContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.desc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDesc([NotNull] TeXpressionMathParser.DescContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscript([NotNull] TeXpressionMathParser.SubscriptContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscript([NotNull] TeXpressionMathParser.SubscriptContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] TeXpressionMathParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] TeXpressionMathParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TeXpressionMathParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterId([NotNull] TeXpressionMathParser.IdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TeXpressionMathParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitId([NotNull] TeXpressionMathParser.IdContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
